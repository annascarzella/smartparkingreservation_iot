services:
  frontend:
    build:
      dockerfile: Dockerfile
      context: ./smartparking
    ports:
      - "3000:3000"
    volumes:
      - ./smartparking:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      BACKEND_URL: ${BACKEND_URL:-changeme}

  node-red:
    image: nodered/node-red
    container_name: mynodered
    ports:
      - "1880:1880"
    volumes:
      - ./node-red:/data
    stdin_open: true
    tty: true

  mqtt:
    build:
      context: ./mqtt_broker
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
      - "1883:1883"

  devices:
    build:
      context: ./devices
      dockerfile: Dockerfile
    depends_on:
      - mqtt
    environment:
      WSMQTT: ${WSMQTT:-changeme}

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PGDATA: /tmp/data
    tmpfs:
      - /tmp
      - /var/run
    ports:
      - "5432:5432"

  database-migrations:
    image: docker.io/migrate/migrate
    volumes:
      - ./backend/server_db/migrations:/migrations
    entrypoint: migrate -database ${DB_URL:-postgres://postgres:password@postgres:5432/postgres}?sslmode=disable -path migrations
    command: up
    depends_on:
      - postgres
    restart: on-failure

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      - database-migrations
      - mqtt
    environment:
      NODE_ENV: development
      DB_URL: ${DB_URL:-postgres://postgres:password@postgres:5432/postgres}
      WSMQTT: ${WSMQTT:-changeme}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      JWT_SECRET: ${JWT_SECRET:-changeme}
      BACKEND_PORT: ${BACKEND_PORT:-5001}

  wokwi:
    build: 
      context: ./wokwi
      dockerfile: Dockerfile
    volumes:
      - ./wokwi:/wokwi
